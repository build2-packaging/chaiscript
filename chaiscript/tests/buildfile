# The executable and modules are imported on purpose
# to get the correct output directories for their targets.
# Using ad hoc importation would only give us the source path.
#
import chaiscript = chaiscript%exe{chai}
#
modules = # Empty
import modules += chaiscript%libs{stl_extra}
import modules += chaiscript%libs{test_module}
module_path = $directory($modules[0])

# All test and inclusion scripts reside in the 'scripts' directory.
# There is also the inclusion script for the unit testing library.
# This was done because there are many scripts and
# it would have been unhandy to put them all into the main test directory.
#
use_path = $src_base/scripts
unit_test_lib = scripts/inc{unit_test}


./: scripts/inc{*}

# Probably '3.x' scripts are for backwards compatibility tests.
# Therefore we loop over all subdirectories and let the scripts run.
#
for d: dir{*}
{
  # This transformation is needed to remove the directory type.
  #
  dd = $directory($d)

  # Loop over all given scripts of the specific directory.
  #
  for script: $dd/chai{*}
  {
    # Provide custom 'test' targets for each script that
    # runs the ChaiScript executable with the unit testing library
    # and the script for testing.
    # It is important to provide the correct environment variables
    # for relative inclusion paths and finding modules.
    # The custom empty 'clean' target gets rid of errors
    # when trying to use the clean command.
    #
    ./: $(script)@$dd/: $unit_test_lib $chaiscript $modules
    % clean
    {{
    }}
    % test
    {{
      diag test $>
      env \
        CHAI_USE_PATH="$use_path/" \
        CHAI_MODULE_PATH="$module_path/" \
        -- $chaiscript $path($<[0]) $path($>)
    }}
  }
}

